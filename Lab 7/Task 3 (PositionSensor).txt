package com.example.positionsensor;

import android.content.Context;
import android.hardware.Sensor;
import android.hardware.SensorEvent;
import android.hardware.SensorEventListener;
import android.hardware.SensorManager;
import android.os.Bundle;
import android.widget.TextView;

import androidx.appcompat.app.AppCompatActivity;

import com.example.positionsensor.R;

public class MainActivity extends AppCompatActivity implements SensorEventListener {

    private SensorManager sensorManager;
    private Sensor accelerometer;
    private Sensor gyroscope;
    private Sensor magnetometer;

    private TextView textViewX;
    private TextView textViewY;
    private TextView textViewZ;

    @Override
    protected void onCreate(Bundle savedInstanceState) {
        super.onCreate(savedInstanceState);
        setContentView(R.layout.activity_main);

        textViewX = findViewById(R.id.textViewX);
        textViewY = findViewById(R.id.textViewY);
        textViewZ = findViewById(R.id.textViewZ);

        sensorManager = (SensorManager) getSystemService(Context.SENSOR_SERVICE);

        accelerometer = sensorManager.getDefaultSensor(Sensor.TYPE_ACCELEROMETER);
        gyroscope = sensorManager.getDefaultSensor(Sensor.TYPE_GYROSCOPE);
        magnetometer = sensorManager.getDefaultSensor(Sensor.TYPE_MAGNETIC_FIELD);
    }

    @Override
    protected void onResume() {
        super.onResume();

        if (accelerometer != null) {
            sensorManager.registerListener(this, accelerometer, SensorManager.SENSOR_DELAY_NORMAL);
        }

        if (gyroscope != null) {
            sensorManager.registerListener(this, gyroscope, SensorManager.SENSOR_DELAY_NORMAL);
        }

        if (magnetometer != null) {
            sensorManager.registerListener(this, magnetometer, SensorManager.SENSOR_DELAY_NORMAL);
        }
    }

    @Override
    protected void onPause() {
        super.onPause();
        sensorManager.unregisterListener(this);
    }

    @Override
    public void onAccuracyChanged(Sensor sensor, int accuracy) {
        // Not used in this example
    }

    @Override
    public void onSensorChanged(SensorEvent event) {
        switch (event.sensor.getType()) {
            case Sensor.TYPE_ACCELEROMETER:
                textViewX.setText("Accelerometer: X = " + event.values[0] +
                        ", Y = " + event.values[1] +
                        ", Z = " + event.values[2]);
                break;
            case Sensor.TYPE_GYROSCOPE:
                textViewY.setText("Gyroscope: X = " + event.values[0] +
                        ", Y = " + event.values[1] +
                        ", Z = " + event.values[2]);
                break;
            case Sensor.TYPE_MAGNETIC_FIELD:
                textViewZ.setText("Magnetometer: X = " + event.values[0] +
                        ", Y = " + event.values[1] +
                        ", Z = " + event.values[2]);
                break;
        }
    }

    private void updateTextViews(String sensorName, float[] values) {
        runOnUiThread(() -> {
            textViewX.setText(sensorName + " X-axis: " + values[0]);
            textViewY.setText(sensorName + " Y-axis: " + values[1]);
            textViewZ.setText(sensorName + " Z-axis: " + values[2]);
        });
    }
}
