// Generated by view binder compiler. Do not edit!
package com.example.dogglers.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.ImageView;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.example.dogglers.R;
import com.google.android.material.card.MaterialCardView;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class VerticalHorizontalListItemBinding implements ViewBinding {
  @NonNull
  private final MaterialCardView rootView;

  @NonNull
  public final ImageView imageViewDog;

  @NonNull
  public final TextView textViewDogAge;

  @NonNull
  public final TextView textViewDogHobbies;

  @NonNull
  public final TextView textViewDogName;

  private VerticalHorizontalListItemBinding(@NonNull MaterialCardView rootView,
      @NonNull ImageView imageViewDog, @NonNull TextView textViewDogAge,
      @NonNull TextView textViewDogHobbies, @NonNull TextView textViewDogName) {
    this.rootView = rootView;
    this.imageViewDog = imageViewDog;
    this.textViewDogAge = textViewDogAge;
    this.textViewDogHobbies = textViewDogHobbies;
    this.textViewDogName = textViewDogName;
  }

  @Override
  @NonNull
  public MaterialCardView getRoot() {
    return rootView;
  }

  @NonNull
  public static VerticalHorizontalListItemBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static VerticalHorizontalListItemBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.vertical_horizontal_list_item, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static VerticalHorizontalListItemBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.imageViewDog;
      ImageView imageViewDog = ViewBindings.findChildViewById(rootView, id);
      if (imageViewDog == null) {
        break missingId;
      }

      id = R.id.textViewDogAge;
      TextView textViewDogAge = ViewBindings.findChildViewById(rootView, id);
      if (textViewDogAge == null) {
        break missingId;
      }

      id = R.id.textViewDogHobbies;
      TextView textViewDogHobbies = ViewBindings.findChildViewById(rootView, id);
      if (textViewDogHobbies == null) {
        break missingId;
      }

      id = R.id.textViewDogName;
      TextView textViewDogName = ViewBindings.findChildViewById(rootView, id);
      if (textViewDogName == null) {
        break missingId;
      }

      return new VerticalHorizontalListItemBinding((MaterialCardView) rootView, imageViewDog,
          textViewDogAge, textViewDogHobbies, textViewDogName);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
